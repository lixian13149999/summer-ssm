<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 设置映射的dao类 -->
<mapper namespace="com.bcdbook.summer.system.dao.RoleDao">
	<!-- 全局配置开始=======start -->
	<!-- 设置映射的数据模型 -->
	<resultMap id="Role" type="com.bcdbook.summer.system.pojo.Role">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="enname" property="enname" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<!-- 
		<collection column="id" property="childs" select="getChilds" />
		<collection column="id" property="powers" select="getPowers" />
		 -->
	</resultMap>
	<!-- 经过角色限制的数据模型,栏目的映射实体 -->
	<resultMap id="RoleMenu" type="com.bcdbook.summer.system.pojo.Menu">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		
		<result column="parent_id" property="parentId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="href" property="href" jdbcType="VARCHAR" />
		<result column="target" property="target" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="permission" property="permission" jdbcType="VARCHAR" />
		<result column="is_show" property="isShow" jdbcType="INTEGER" />
		
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 权限的映射实体 -->
	<resultMap id="RolePower" type="com.bcdbook.summer.system.pojo.Power">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
		
		<result column="menu_id" property="menuId" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="icon" property="icon" jdbcType="VARCHAR" />
		<result column="sort" property="sort" jdbcType="INTEGER" />
		<result column="permission" property="permission" jdbcType="VARCHAR" />
		<result column="is_show" property="isShow" jdbcType="INTEGER" />
		
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="VARCHAR" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 定义查询的所有参数 -->
	<sql id="RoleColumns">
		id, del_flag,
		name, enname, sort,
		create_time, create_by, update_time, update_by, remark
	</sql>
	<!-- 定义所有条件 -->
	<sql id="RoleCondition">
		<where>
	    	<if test="id != null and !&quot;&quot;.equals(id.trim())">
		    	and id = #{id}
		    </if>
		    <if test="true">
		    	and del_flag = 1
		    </if>
		     
		    <if test="name != null and !&quot;&quot;.equals(name.trim())">
		    	and name = #{name}
		    </if>
		    <if test="enname != null and !&quot;&quot;.equals(enname.trim())">
		    	and enname = #{enname}
		    </if>
		    <if test="sort != null and sort != 0">
		    	and sort = #{sort}
		    </if>
		    
		    <if test="createTime != null and !&quot;&quot;.equals(createTime.trim())">
		    	and create_time = #{createTime}
		    </if>
		    <if test="createBy != null and !&quot;&quot;.equals(createBy.trim())">
		    	and create_by = #{createBy}
		    </if>
		    <if test="updateTime != null and !&quot;&quot;.equals(updateTime.trim())">
		    	and update_time = #{updateTime}
		    </if>
		    <if test="updateBy != null and !&quot;&quot;.equals(updateBy.trim())">
		    	and update_by = #{updateBy}
		    </if>
		    <if test="remark != null and !&quot;&quot;.equals(remark.trim())">
		    	and remark = #{remark}
		    </if>
	    </where>
	</sql>
	<!-- 全局配置结束========end -->
	
	<!-- 添加 -->
	<insert id="insert" useGeneratedKeys="false" keyProperty="id" parameterType="com.bcdbook.summer.system.pojo.Role">
		insert into sys_role (id, del_flag, name, enname, sort, create_time, create_by, update_time, update_by, remark)
		values (
			#{id,jdbcType=VARCHAR},
			#{delFlag,jdbcType=INTEGER},
			
			#{name,jdbcType=VARCHAR},
			#{enname,jdbcType=VARCHAR},
			#{sort,jdbcType=INTEGER},
			
			#{createTime,jdbcType=VARCHAR},
			#{createBy,jdbcType=VARCHAR},
			#{updateTime,jdbcType=VARCHAR},
			#{updateBy,jdbcType=VARCHAR},
			#{remark,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 伪删除(根据id) -->
	<update id="delete" parameterType="java.lang.String">
		update sys_role
		<set>
			del_flag = 2
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<!-- 伪删除(根据实体类条件) -->
	<update id="deleteByCondition" parameterType="com.bcdbook.summer.system.pojo.Role">
		update sys_role
		<set>
			del_flag = 2
		</set>
		<include refid="RoleCondition" />
	</update>
	
	<!-- 修改权限 -->
	<update id="update" parameterType="com.bcdbook.summer.system.pojo.Role">
		update sys_role
		<set>
		    <if test="delFlag != null and delFlag != 0">
		    	del_flag = #{delFlag},
		    </if>
		    
		    <if test="name != null and !&quot;&quot;.equals(name.trim())">
		    	name = #{name},
		    </if>
		    <if test="enname != null and !&quot;&quot;.equals(enname.trim())">
		    	enname = #{enname},
		    </if>
		    <if test="sort != null and sort != 0">
		    	sort = #{sort},
		    </if>
		    
		    <if test="createTime != null and !&quot;&quot;.equals(createTime.trim())">
		    	create_time = #{createTime},
		    </if>
		    <if test="createBy != null and !&quot;&quot;.equals(createBy.trim())">
		    	create_by = #{createBy},
		    </if>
		    <if test="updateTime != null and !&quot;&quot;.equals(updateTime.trim())">
		    	update_time = #{updateTime},
		    </if>
		    <if test="updateBy != null and !&quot;&quot;.equals(updateBy.trim())">
		    	update_by = #{updateBy},
		    </if>
		    <if test="remark != null and !&quot;&quot;.equals(remark.trim())">
		    	remark = #{remark},
		    </if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 查询(根据id) -->
	<select id="get" resultMap="Role" parameterType="java.lang.String">
		select
		<include refid="RoleColumns" />
		from sys_role
		where id = #{id,jdbcType=VARCHAR} 
		and del_flag = 1
	</select>
	<!-- 查询(根据实体类条件) -->
	<select id="getByCondition" resultMap="Role" parameterType="com.bcdbook.summer.system.pojo.Role">
		select
		<include refid="RoleColumns" />
		from sys_role
		<include refid="RoleCondition" /> 
	</select>
	<!-- 查询(根据实体类条件) -->
	<select id="findList" resultMap="Role" parameterType="com.bcdbook.summer.system.pojo.Role">
		select
		<include refid="RoleColumns" />
		from sys_role
		<include refid="RoleCondition" /> 
	    order by sort
	    <if test="page != null">
	    	LIMIT #{page.lineStart,jdbcType=INTEGER},#{page.pageSize,jdbcType=INTEGER}
	    </if>
	</select>
	<!-- 查询所有数据 -->
	<select id="findAllList" resultMap="Role" parameterType="com.bcdbook.summer.system.pojo.Role">
		select
		<include refid="RoleColumns" />
		from sys_role where 1=1 
		order by sort
	</select>
	<!-- 根据实体类条件,符合数据的数量 -->
	<select id="count" resultType="java.lang.Integer" parameterType="com.bcdbook.summer.system.pojo.Role">
		select count(*) from sys_role
		<include refid="RoleCondition" />
	</select>
	
	
	<!-- 关联关系的数据操作开始 -->
	<!-- 添加角色,栏目关系 -->
	<insert id="addMenu" parameterType="java.util.Map">
		insert into sys_role_menu (role_id,menu_id)
		values (
			#{roleId,jdbcType=VARCHAR},
			#{menuId,jdbcType=VARCHAR}
		)
	</insert>
	<delete id="deleteMenu" parameterType="java.util.Map">
		delete from sys_role_menu
		where role_id = #{roleId,jdbcType=VARCHAR}
		and menu_id = #{menuId,jdbcType=VARCHAR}
	</delete>
	<!-- 查询角色,栏目关系 -->
	<select id="getMenu" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from sys_role_menu
		where role_id = #{roleId,jdbcType=VARCHAR}
		and menu_id = #{menuId,jdbcType=VARCHAR}
	</select>
	<!-- 根据角色,查询出与之有关联的栏目的集合 -->
	<select id="listMenuByRole" resultMap="RoleMenu" parameterType="java.lang.String">
		select m.* 
		from sys_menu m
		left join sys_role_menu rm 
		on m.id=rm.menu_id
		where rm.role_id=#{roleId}
		and m.del_flag = 1
	</select>
	
	<!-- 添加角色,权限关系 -->
	<insert id="addPower" parameterType="java.util.Map">
		insert into sys_role_power (role_id,power_id)
		values (
			#{roleId,jdbcType=VARCHAR},
			#{powerId,jdbcType=VARCHAR}
		)
	</insert>
	<delete id="deletePower" parameterType="java.util.Map">
		delete from sys_role_power
		where role_id = #{roleId,jdbcType=VARCHAR}
		and power_id = #{powerId,jdbcType=VARCHAR}
	</delete>
	<!-- 查询角色,权限关系 -->
	<select id="getPower" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(*) from sys_role_power
		where role_id = #{roleId,jdbcType=VARCHAR}
		and power_id = #{powerId,jdbcType=VARCHAR}
	</select>
	<!-- 根据角色,查询出与之有关联的栏目的集合 -->
	<select id="listPowerByRole" resultMap="RolePower" parameterType="java.lang.String">
		select p.* 
		from sys_power p
		left join sys_role_power rp
		on p.id=rp.power_id
		where rp.role_id=#{roleId}
		and p.del_flag = 1
	</select>
	<!-- 关联关系的数据操作,结束 -->
</mapper>
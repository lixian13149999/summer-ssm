<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 拦截器配置 -->
	   <!-- 设置过滤掉的静态资源 -->
	   <!-- 可以通过这种方式,映射出所有的公共资源 -->
	<mvc:resources location="/pages/" mapping="/pages/**"/>
	<mvc:resources location="/static/" mapping="/static/**"/>
	   <!-- <mvc:resources mapping="/js/**" location="/public/javascript/"/>    
	<mvc:resources mapping="/css/**" location="/static_resources/css/"/>    
	<mvc:resources mapping="/images/**" location="/static_resources/images/"/> -->
	   <!-- 配置拦截器, 多个拦截器,顺序执行 -->  
	<mvc:interceptors>    
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/**" />  
	        
	        <!-- 登录页面 -->
	        <mvc:exclude-mapping path="/signin" />
	        <!-- 注册页面 -->
	        <mvc:exclude-mapping path="/signup" />
	        
	        <!-- 用于检查用户名是否可以使用 -->
	        <mvc:exclude-mapping path="/user/userNameCanUse" />
	        <!-- 检查符合条件的用户是否存在 -->
	        <mvc:exclude-mapping path="/user/userIsExist" />
	        <!-- 检查邮箱是否是唯一的 -->
	        <mvc:exclude-mapping path="/user/checkEmailIsSingle" />
	        <!-- 获取邮箱验证页面的接口 -->
	        <mvc:exclude-mapping path="/user/verifyEmailPage" />
	        <!-- 获取邮箱验证页面的接口(绑定失败页面) -->
	        <mvc:exclude-mapping path="/user/bundleEmail" />
	        
	        <!-- 发送邮件的接口 -->
	        <mvc:exclude-mapping path="/mail/sendVerifyEmail" />
	        
	        <!-- 允许wechat直接访问 -->
	        <mvc:exclude-mapping path="/wechat" />
	        <!-- 拦截时过滤掉wechat/login -->
	        <mvc:exclude-mapping path="/wechat/login" />
	        
	        <!-- 过滤掉错误页面的拦截 -->
	        <mvc:exclude-mapping path="/error/**" />
	        
	        <!-- 过滤掉demo下面的所有路径 -->
	        <mvc:exclude-mapping path="/demo/**" />
	        
	        <bean class="com.bcdbook.summer.common.interceptor.CommonInterceptor"></bean>    
	    </mvc:interceptor>  
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors>
	<!-- 拦截器配置结束 -->
</beans>